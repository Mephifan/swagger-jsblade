/*
* apiCommon
* api调用中的公共部分
* */
Utils.apiCommon = function (_paramObj, options, a, success, error, opt) {
    var paramObj = Utils.cloneObj(_paramObj);
    var paramArr = Utils.paramArr(a);
    if (!Promise) {
        throw new Error('需要Promise,请加入Promise依赖!');
    }
    return new Promise(function (resolve, reject) {
        if (Utils.lackParam(reject, paramArr, paramObj, error)) {
            return false;
        }
        options = Utils.getOptions(options, paramArr, paramObj);
        options = Utils.assignObj(options, opt);
        Utils.sendReq(resolve, reject, options, success, error);
        return true;
    });
};

{@if config.promiseInject}{@include file://./es6-promise-polyfill.juicer, _}{@/if}

function $${config.apiName} (options) {
    var domain = '$${swagger.domain}';
    var basePathNew = '$${swagger.basePathNew}';
    var domainNew = (Utils.isObject(options)) ? options.domain : options;
    domain = (typeof domainNew === 'string') ? domainNew : domain;
    this.urlPre = domain + basePathNew;
}